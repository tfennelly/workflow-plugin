<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ The MIT License
  ~
  ~ Copyright (c) 2013-2014, CloudBees, Inc.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jenkins-ci.plugins.workflow</groupId>
        <artifactId>workflow-pom</artifactId>
        <version>1.13-SNAPSHOT</version>
    </parent>
    <artifactId>workflow-cps</artifactId>
    <packaging>hpi</packaging>
    <name>Workflow: Groovy CPS Execution</name>
    <url>https://wiki.jenkins-ci.org/display/JENKINS/Workflow+Plugin</url>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>workflow-step-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>workflow-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>workflow-support</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>workflow-scm-step</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>script-security</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>workflow-support</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>workflow-basic-steps</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.cloudbees</groupId>
            <artifactId>groovy-cps</artifactId>
            <version>1.5</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.ui</groupId>
            <artifactId>jquery-detached</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.ui</groupId>
            <artifactId>ace-editor</artifactId>
            <version>1.0.1</version>
        </dependency>
        <!-- HPI needs to be built from https://github.com/tfennelly/jenkins-js-widgets -->
        <dependency>
            <groupId>org.jenkins-ci.ui</groupId>
            <artifactId>js-widgets</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>target/generated-resources/adjuncts</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <!-- 
                        TODO currently, the workflow-job module depends on tests from here; this dependency should probably be broken.
                    -->
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <!--
        Everything from here on is copied from https://github.com/tfennelly/jenkins-js-builder#maven-integration
        This would all go into one of the parent pom.xml files, from where every plugin could use it.
    -->
    <properties>
        <node.version>4.0.0</node.version>
        <npm.version>2.13.1</npm.version>
    </properties>
    <profiles>
        <!--
            Manually download node and NPM for the frontend plugin so it gets cached in the local maven repo.
            Otherwise frontend will be downloading it all the time. The download-maven-plugin
            caches it's downloads.
        -->
        <profile>
            <id>node-classifier-linux</id>
            <activation>
                <os><family>Linux</family><arch>amd64</arch></os>
            </activation>
            <properties>
                <node.download.file>node-v${node.version}-linux-x64.tar.gz</node.download.file>
                <node.download.classifier />
            </properties>
        </profile>
        <profile>
            <id>node-classifier-mac</id>
            <activation>
                <os><family>mac</family></os>
            </activation>
            <properties>
                <node.download.file>node-v${node.version}-darwin-x64.tar.gz</node.download.file>
                <node.download.classifier />
            </properties>
        </profile>
        <profile>
            <id>node-classifier-windows</id>
            <activation>
                <os><family>windows</family><arch>x64</arch></os>
            </activation>
            <properties>
                <node.download.file>win-x64/node.exe</node.download.file>
                <node.download.classifier>/x64</node.download.classifier>
            </properties>
        </profile>
        <profile>
            <id>node-classifier-windows-amd64</id>
            <activation>
                <os><family>windows</family><arch>amd64</arch></os>
            </activation>
            <properties>
                <node.download.file>win-x64/node.exe</node.download.file>
                <node.download.classifier>/x64</node.download.classifier>
            </properties>
        </profile>
        <profile>
            <id>node-classifier-windows-x86</id>
            <activation>
                <os><family>windows</family><arch>x86</arch></os>
            </activation>
            <properties>
                <node.download.file>win-x86/node.exe</node.download.file>
                <node.download.classifier />
            </properties>
        </profile>
        <profile>
            <id>node-download</id>
            <activation>
                <file>
                    <exists>package.json</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>download-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>get-node</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>https://nodejs.org/dist/v${node.version}/${node.download.file}</url>
                                    <unpack>false</unpack>
                                    <outputDirectory>${project.build.directory}/frontend/v${node.version}${node.download.classifier}</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>get-npm</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>http://registry.npmjs.org/npm/-/npm-${npm.version}.tgz</url>
                                    <unpack>false</unpack>
                                    <outputDirectory>${project.build.directory}/frontend/</outputDirectory>
                                    <outputFileName>npm-${npm.version}.tgz</outputFileName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>gulp-execution</id>
            <activation>
                <file>
                    <exists>gulpfile.js</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>1.3.1</version>
                        <executions>
                            <execution>
                                <id>enforce-versions</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireMavenVersion>
                                            <version>3.1.0</version>
                                        </requireMavenVersion>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>0.0.23</version>

                        <executions>

                            <execution>
                                <phase>initialize</phase>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v${node.version}</nodeVersion>
                                    <npmVersion>${npm.version}</npmVersion>
                                    <!-- Use the pre-download node and npm packages. See download-maven-plugin config above. -->
                                    <downloadRoot>${project.baseUri}target/frontend/</downloadRoot>
                                </configuration>
                            </execution>

                            <execution>
                                <phase>initialize</phase>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <!-- Note that this may not be omitted lest maven-release-plugin be confused (frontend-maven-plugin #109): -->
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>

                            <execution>
                                <phase>generate-sources</phase>
                                <id>gulp bundle</id>
                                <goals>
                                    <goal>gulp</goal>
                                </goals>
                                <configuration>
                                    <arguments>bundle</arguments>
                                </configuration>
                            </execution>

                            <execution>
                                <phase>test</phase>
                                <id>gulp test</id>
                                <goals>
                                    <goal>gulp</goal>
                                </goals>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>clean-node</id>
            <activation>
                <file>
                    <exists>package.json</exists>
                </file>
                <property>
                    <name>cleanNode</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>node</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                                <fileset>
                                    <directory>node_modules</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
